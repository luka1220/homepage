{"version":3,"file":"component---src-templates-blog-list-js-e3da07dbd61fb008f1a8.js","mappings":"8JA8CA,IAzCiB,EAAGA,KAAAA,MAClB,mBACEC,UAAU,YACVC,GAAI,CACFC,GAAI,WAGLH,EAAKI,YAAYC,eAChB,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAKI,YAAYI,OACzB,QAAC,EAAAC,EAAD,CACEC,MAAOV,EAAKI,YAAYC,cAAcM,gBAAgBC,gBACtDC,IAAKb,EAAKI,YAAYU,MAAQ,oBAC9Bb,UAAU,oBAId,IAEF,eAAKA,UAAU,iBACb,cAAIA,UAAU,UACZ,QAAC,EAAAK,KAAD,CACEC,GAAIP,EAAKI,YAAYI,KACrBN,GAAI,CACFa,QAAS,mBAGVf,EAAKI,YAAYU,SAGtB,aACEb,UAAU,OACVC,GAAI,CACFc,MAAO,WAGT,oBAAOhB,EAAKI,YAAYa,U,qGC/BhC,MAAMC,EAAS,CACbC,WAAY,CACVC,EAAG,CACDJ,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAiCTK,EAAaC,IACjB,eAAKrB,UAAU,aAAaC,GAAIgB,EAAOC,aACrC,mBACIG,EAAMC,UACN,mBACE,QAAC,EAAAjB,KAAD,CAAMC,GAAIe,EAAME,SAAUC,IAAI,SAC5B,gBAAMxB,UAAU,eACd,QAAC,MAAD,OACM,IAHV,aAQHyB,MAAMC,KAAK,CAAEC,OAAQN,EAAMO,WAAY,CAACC,EAAGC,KAC1C,cAAIC,IAAM,oBAAmBD,EAAI,MAC/B,QAAC,EAAAzB,KAAD,CACEC,GAAK,GAAEe,EAAMW,WAAiB,IAANF,EAAU,GAAKA,EAAI,IAC3C9B,UAAWqB,EAAMY,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,OAITT,EAAMa,SACN,mBACE,QAAC,EAAA7B,KAAD,CAAMC,GAAIe,EAAMc,SAAUX,IAAI,QAA9B,OACO,KACL,gBAAMxB,UAAU,gBACd,QAAC,MAAD,WAQd,MAAMoC,UAAkBC,EAAAA,UACtBC,SACE,MAAM,KAAEvC,GAASwC,KAAKlB,OAChB,YAAEY,EAAF,SAAeL,GAAaW,KAAKlB,MAAMmB,YACvCR,EAAW,SACXV,EAA0B,IAAhBW,EACVC,EAASD,IAAgBL,EACzBL,EACJU,EAAc,GAAM,EAAID,EAAWA,GAAYC,EAAc,GAAGQ,WAC5DN,EAAWH,GAAYC,EAAc,GAAGQ,WAExCC,EAAQ3C,EAAK4C,kBAAkBC,MAClCC,QAAOC,KAAUA,EAAKC,KAAK5C,YAAYa,OACvCgC,KAAIF,IAAQ,QAAC,IAAD,CAAUf,IAAKe,EAAKC,KAAKE,GAAIlD,KAAM+C,EAAKC,SACvD,IAAI1B,EAAQ,CACVC,QAAAA,EACAC,SAAAA,EACAK,SAAAA,EACAI,SAAAA,EACAC,YAAAA,EACAC,OAAAA,EACAC,SAAAA,GAGF,OACE,QAAC,IAAD,CAAQnC,UAAU,cAChB,QAAC,IAAD,CACEa,MAAO,eAAiBoB,EAAc,OAASL,EAC/CsB,YACE,4BAA8BjB,EAAc,OAASL,KAGzD,2BACA,eAAK5B,UAAU,yBAAyB0C,IACxC,QAACtB,EAAeC,KAMxB","sources":["webpack://luka1220.github.io/./src/components/post-card.js","webpack://luka1220.github.io/./src/templates/blog-list.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PostCard = ({ data }) => (\n  <article\n    className=\"post-card\"\n    sx={{\n      bg: \"cardBg\",\n    }}\n  >\n    {data.frontmatter.featuredImage ? (\n      <Link to={data.frontmatter.slug}>\n        <GatsbyImage\n          image={data.frontmatter.featuredImage.childImageSharp.gatsbyImageData}\n          alt={data.frontmatter.title + \" - Featured image\"}\n          className=\"featured-image\"\n        />\n      </Link>\n    ) : (\n      \"\"\n    )}\n    <div className=\"post-content\">\n      <h2 className=\"title\">\n        <Link\n          to={data.frontmatter.slug}\n          sx={{\n            variant: \"links.postLink\",\n          }}\n        >\n          {data.frontmatter.title}\n        </Link>\n      </h2>\n      <p\n        className=\"meta\"\n        sx={{\n          color: \"muted\",\n        }}\n      >\n        <time>{data.frontmatter.date}</time>\n      </p>\n    </div>\n  </article>\n)\n\nexport default PostCard\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport Seo from \"../components/seo\"\n\nconst styles = {\n  pagination: {\n    a: {\n      color: \"muted\",\n      \"&.is-active\": {\n        color: \"text\",\n      },\n      \"&:hover\": {\n        color: \"text\",\n      },\n    },\n  },\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, width: 345, height: 260)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = props => (\n  <div className=\"pagination\" sx={styles.pagination}>\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n            <span className=\"icon -left\">\n              <RiArrowLeftLine />\n            </span>{\" \"}\n            Previous\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`}>\n          <Link\n            to={`${props.blogSlug}${i === 0 ? \"\" : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Next{\" \"}\n            <span className=\"icon -right\">\n              <RiArrowRightLine />\n            </span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = \"/blog/\"\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge => <PostCard key={edge.node.id} data={edge.node} />)\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage,\n    }\n\n    return (\n      <Layout className=\"blog-page\">\n        <Seo\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\n          description={\n            \"Stackrole base blog page \" + currentPage + \" of \" + numPages\n          }\n        />\n        <h1>Blog</h1>\n        <div className=\"grids col-1 sm-2 lg-3\">{posts}</div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n"],"names":["data","className","sx","bg","frontmatter","featuredImage","Link","to","slug","G","image","childImageSharp","gatsbyImageData","alt","title","variant","color","date","styles","pagination","a","Pagination","props","isFirst","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","React","render","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","map","id","description"],"sourceRoot":""}